############################################################################
#  Minimal Vellvm subset for CertiCoq's LLVM backend (Coq 8.19)
############################################################################

# This Makefile compiles the *core* subset of Vellvm needed by CertiCoq’s
# LLVM backend.  It does two passes:
#   1.  Build a tiny header `UniverseFlags.v` that turns on modern
#       universe‑polymorphic mode.
#   2.  Re‑build every other whitelisted file **with** the additional
#       Coq flag `-require Vellvm.UniverseFlags`, so the header is
#       executed before type–checking starts.
#
# The split avoids the self‑require cycle that would happen if the flag
# were already present while compiling `UniverseFlags.v` itself.
############################################################################

UNIVERSE_FLAGS := UniverseFlags.v

# ─── 1. External libraries --------------------------------------------------
# Numeric/*.v uses bits of CompCert’s Integers and Flocq’s floats.
VELLVM_INC := \
  -Q $(shell opam var lib)/coq/user-contrib/ExtLib   ExtLib   \
  -Q $(shell opam var lib)/coq/user-contrib/compcert CompCert \
  -Q $(shell opam var lib)/coq/user-contrib/Flocq     Flocq \
  -R Syntax   Vellvm.Syntax  \
  -R Numeric  Vellvm.Numeric \
  -R Utils    Vellvm.Utils   \
	-R QC 			Vellvm.QC			 \
  -R .        Vellvm

# ─── 2. White‑listed sources ------------------------------------------------

NUMERIC_V := $(shell find Numeric -name '*.v' | sort)
UTILS_V   := \
        Utils/OptionUtil.v \
        Utils/Tactics.v Utils/PropT.v Utils/InterpProp.v Utils/Util.v \
        Utils/Default.v Utils/Inhabited.v Utils/NonEmpty.v \
        Utils/Monads.v Utils/StateMonads.v Utils/MonadExcLaws.v Utils/MonadEq1Laws.v \
        Utils/MonadReturnsLaws.v Utils/ListUtil.v Utils/Error.v Utils/AListFacts.v
UTILS_TOTAL_V := Utilities.v
SYNTAX_V  := Syntax/LLVMAst.v Syntax/DynamicTypes.v Syntax/AstLib.v Syntax/TypeUtil.v Syntax/CFG.v
QC_V			:= QC/ShowAST.v QC/DList.v

VFILES := $(UNIVERSE_FLAGS) $(NUMERIC_V) $(UTILS_V) $(UTILS_TOTAL_V) $(SYNTAX_V) $(QC_V) 

.DEFAULT_GOAL := all          # “make” with no target → build everything

############################################################################
# 3. coq_makefile -----------------------------------------------------------
############################################################################
Makefile.core: $(VFILES)
	coq_makefile $(VELLVM_INC) -o $@ $(VFILES)

############################################################################
# 4. Build rules (two‑pass strategy) ---------------------------------------
############################################################################

# --- Pass 1 : build the header alone (no -require flag) -------------------
UniverseFlags.vo: UniverseFlags.v
	coqc $(VELLVM_INC) $<

# --- Pass 2 : build *everything else* with the header pre‑required --------
.PHONY: all
all: UniverseFlags.vo Makefile.core
	$(MAKE) -f Makefile.core COQFLAGS='-require Vellvm.UniverseFlags' -j1

# Any .vo (except the header) – delegate to the autogenerated Makefile
%.vo: %.v Makefile.core
	$(MAKE) -f Makefile.core COQFLAGS='-require Vellvm.UniverseFlags' $@

############################################################################
# 5. House-keeping ----------------------------------------------------------
.PHONY: all
all: $(UNIVERSE_FLAGS:.v=.vo) Makefile.core
	# Pass the -require flag *only* for the second pass
	$(MAKE) -f Makefile.core COQFLAGS='-require Vellvm.UniverseFlags' -j1

# Individual .vo targets delegate to the autogenerated Makefile
%.vo: %.v Makefile.core
	$(MAKE) -f Makefile.core COQFLAGS='-require Vellvm.UniverseFlags' $@

############################################################################
# 5. House‑keeping ----------------------------------------------------------
############################################################################
.PHONY: clean
clean:
	rm -f $(patsubst %.v,%.vo %.glob,$(VFILES)) Makefile.core $(UNIVERSE_FLAGS)

############################################################################
# 6. Auto‑generate UniverseFlags.v -----------------------------------------
############################################################################
$(UNIVERSE_FLAGS):
	@echo "(**  Global universe settings for Vellvm ‑‑ generated automatically. *)" > $@
	@echo "Set Universe Polymorphism."                                          >> $@
	@echo "Unset Universe Minimization ToSet."                                 >> $@
